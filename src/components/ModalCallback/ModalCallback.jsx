import React, { useState } from "react";
import axios from "axios";
import "./modalcallback.css";

const ModalCallback = (props) => {
  const [clientName, setClientName] = useState("");
  const [clientPhone, setClientPhone] = useState("");
  const [clientCompany, setClientCompany] = useState("");
  const [clientGoal, setClientGoal] = useState("");
  const [clientText, setClientText] = useState("");
 

  const botToken = "5987621859:AAG4xA4TVnmztLIebEQJmR_t47I61Z9IUmU";
  const urlApi = `https://api.telegram.org/bot${botToken}/sendMessage`;
  const chatId = "-1001565514969";
  const [success, setSuccess] = useState("");

  const sendAlert = (e) => {
    e.preventDefault();

    let message = `<b>ü§©–ó–∞—è–≤–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫ü§©</b>\n`;
    message += `<b>–ò–º'—è –∫–ª—ñ–µ–Ω—Ç–∞:</b> ${clientName}\n`;
    message += `<b>–ö–æ–º–ø–∞–Ω—ñ—è:</b> ${clientCompany}\n`;
    message += `<b>–ú–µ—Ç–∞:</b> ${clientGoal}\n`;
    message += `<b>–¢–µ–∫—Å—Ç –∫–ª—ñ–µ–Ω—Ç–∞:</b> ${clientText}\n`;
    message += `<b>–¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞:</b><code> ${clientPhone}</code>`;
    axios
      .post(urlApi, {
        chat_id: chatId,
        parse_mode: "html",
        text: message,
      })
      .then((res) => {
        setSuccess(true);
      })
      .catch((err) => {
        setSuccess(false);
      })
      .finally(() => {});
  };

  return (
    <>
      {success ? (
        <div className="modalWrapper">
          <div className="modalCallbackBody">
            <img
              src="./images/cross.png"
              className="closeModal"
              alt="Close"
              width="24"
              height="24"
              onClick={props.closeModal}
            />
            
              <span className="successAlert">–î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ<br/> –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ. –ó –≤–∞–º–∏ –∑–≤'—è–∂–µ—Ç—å—Å—è<br/> –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ—Ç—è–≥–æ–º 30 —Ö–≤–∏–ª–∏–Ω.</span>
            
          </div>
        </div>
      ) : (
        <div className="modalWrapper">
          <div className="modalCallbackBody">
            <img
              src="./images/cross.png"
              className="closeModal"
              alt="Close"
              width="24"
              height="24"
              onClick={props.closeModal}
            />
            <div className="callbackFormContent">
              <h4> –î–∞–≤–∞–π –ø–æ–∑–Ω–∞–π–æ–º–∏–º–æ—Å—è</h4>
              <p>
              –ë—É–¥—å –ª–∞—Å–∫–∞ –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —Ñ–æ—Ä–º—É
              </p>
              <form action="" className="callbackForm" onSubmit={sendAlert}>
                <input
                  type="name"
                  name="name"
                  placeholder="–Ü–º'—è"
                  value={clientName}
                  onChange={(event) => setClientName(event.target.value)}
                />
                <input
                  type="name"
                  name="name"
                  placeholder="–ö–æ–º–ø–∞–Ω–∏—è"
                  value={clientCompany}
                  onChange={(event) => setClientCompany(event.target.value)}
                />
                <input
                  type="name"
                  name="name"
                  placeholder="–©–æ –ø–ª–∞–Ω—É–µ–º–æ –∑–Ω—ñ–º–∞—Ç–∏?)"
                  value={clientGoal}
                  onChange={(event) => setClientGoal(event.target.value)}
                />
                <input
                  type="tel"
                  name="phone"
                  placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É"
                  value={clientPhone}
                  onChange={(event) => setClientPhone(event.target.value)}
                />
                <textarea
                
                  type="name"
                  name="name"
                  placeholder="–©–æ –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–Ω–∞—Ç–∏?)"
                  value={clientText}
                  onChange={(event) => setClientText(event.target.value)}
                />
                <button className="callbackModalBtn" type="submit">
                  –û–¢–ü–†–ê–í–ò–¢–¨
                </button>
              </form>
              <span className="policyTitle">
                –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å¬ª, –í—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å<br />
                <p>–ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</p>
              </span>
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default ModalCallback;
